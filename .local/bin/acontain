#!/bin/sh

# TODO: sed-able with @
program_version=0.0.0
datadir=/usr/share/abuild

if ! [ -f "$datadir/functions.sh" ]; then
	echo "$datadir/functions.sh: not found" >&2
	exit 1
fi
. "$datadir/functions.sh"

# defaults
BUILD_BASE="build-base"
ARCHES="x86 x86_64"
NAME_PREFIX="acontain"
MIRROR="http://nl.alpinelinux.org/alpine"

: ${SUDO:="sudo"}
: ${SUDO_APK:="abuild-apk"}

create() {
	local c

	_foreach_container _create
}

_create() {
	local name=$1
	local release=$2
	local arch=$3
	local rootfs=$4

	if ! $SUDO lxc-info -n $name >/dev/null 2>&1; then
		msg "Creating $name"
		$SUDO lxc-create \
			-n $name \
			-t alpine \
			-- \
			-r $MIRROR/$(_version $release)/main \
			-a $arch \
			$BUILD_BASE
	fi

	if ! $SUDO grep -q "^$BUILD_BASE\$" $rootfs/etc/apk/world; then
		msg "Installing $BUILD_BASE in $name"
		$SUDO_APK add --root $rootfs $BUILD_BASE
	fi
}

_branches() {
	git for-each-ref --format='%(refname:short)' refs/heads |
		grep -e 'master$' -e '[0-9.]-stable$'
}

_foreach_container() {
	local cb=$1
	local r a n

	for r in $(_releases); do
		for a in $ARCHES; do
			n=$NAME_PREFIX-$r-$a
			eval $1 $n \$r \$a $(_lxc_path)/$n/rootfs
		done
	done
}

_releases() {
	_branches | sed 's|^master$|edge|;s|-stable$||'
}

_version() {
	echo "$@" | sed 's|^\([0-9]\)|v\1|'
}

_lxc_path() {
	$SUDO lxc-config lxc.lxcpath
}

_verify() {
	[ "$APORTSDIR" ] || die "can't locate \$APORTSDIR"
	git rev-parse 2>/dev/null || die "not in a git tree"
}

_usage() {
	cat >&2 <<-EOF
	$program $program_version
	usage: $program <command>

	Commands:
	 create  create lxc containers for every branch
	EOF
}

_verify

cmd=$1
shift

case $cmd in
	create)
		$cmd "$@"
		;;
	*)
		_usage
		;;
esac
