#!/bin/sh

. $(dirname $0)/config

colorize() {
  local s="$1"
  local open='%%{F%s}%%{B%s}'
  local close='%%{F-}%%{B-}'
  local fg bg ul

  eval fg=\$COLOR_${2}_FG
  eval bg=\$COLOR_${2}_BG
  [ $# -eq 3 ] && eval ul=\$COLOR_${2}_UL

  if [ "$ul" ]; then
    printf -- $open'%%{U%s}%%{+u}%s%%{-u}%%{U-}'$close $fg $bg $ul "$s"
  else
    printf -- $open'%s'$close $fg $bg "$s"
  fi
}

bspwm_parse() {
  local oifs="$IFS"

  IFS=:
  for d in $1; do
    case $d in
      O*)
        printf -- '%s' "$(colorize " ${d#?} " OCCUPIED_FOCUSED 1)"
        ;;
      F*)
        printf -- '%s' "$(colorize " ${d#?} " FREE_FOCUSED 1)"
        ;;
      U*|u*)
        printf -- '%s' "$(colorize " ${d#?} " URGENT 1)"
        ;;
      o*)
        printf -- '%s' "$(colorize " ${d#?} " OCCUPIED)"
        ;;
      f*)
        printf -- '%s' "$(colorize " ${d#?} " FREE)"
        ;;
    esac
  done

  IFS="$oifs"
}

date_parse() {
    local date time

    date=$(colorize ${1% *} DATE)
    time=$(colorize ${1#* } TIME)

    printf '%s %s' "$date" "$time"
}

battery_color() {
  local c=BATTERY_FULL

  [ "$1" -lt 75 ] && c=BATTERY_HIGH
  [ "$1" -lt 50 ] && c=BATTERY_MEDIUM
  [ "$1" -lt 25 ] && c=BATTERY_LOW

  printf '%s' $c
}

battery_parse() {
  local bat=
  local ac=
  local oifs="$IFS"
  local percentage="$(colorize '%%' BATTERY_PERCENTAGE)"

  IFS=:
  for b in $1; do
    case $b in
      B*)
        [ "$bat" ] && bat="$bat "
        bat="$bat$(colorize "${b#?}" $(battery_color ${b#?}))$percentage"
        ;;
      A*)
        [ "${b#?}" = 0 ] || ac="$(colorize AC BATTERY_AC)"
    esac
  done
  printf -- '%s%s' "$ac" "$bat"

  IFS="$oifs"
}

link_color() {
  local c=LINK_FULL

  echo quality: $1 >log.out

  [ "$1" -lt 75 ] && c=LINK_HIGH
  [ "$1" -lt 50 ] && c=LINK_MEDIUM
  [ "$1" -lt 25 ] && c=LINK_LOW

  printf '%s' $c
}

link_parse() {
  local ssid quality level
  IFS=:
  for f in $1; do
    case $f in
      S*)
        ssid=${f#?}
        ;;
      Q*)
        quality=${f#?}
        ;;
    esac
  done

  printf -- '%s' "$(colorize "$ssid" $(link_color $quality))"
}

parse() {
  local desktops title system dt bat link sep

  title=bspwm
  sep=$(colorize ' | ' SEPARATOR)

  while read -r line; do

    case $line in
      W*)
        desktops=$(bspwm_parse ${line#?})
        ;;
      T*)
        title="$(colorize " ${line#?} " TITLE)"
        ;;
      D*)
        dt="$(date_parse "${line#?}")"
        ;;
      B*)
        bat="$(battery_parse "${line#?}")"
        ;;
      L*)
        link="$(link_parse "${line#?}")"
        ;;
    esac

    printf -- '%s' "%{l}${desktops}%{c}${title}%{r}"
    [ "$link" ] && printf -- '%s%s' "$link" "$sep"
    [ "$bat" ] && printf -- '%s%s' "$bat" "$sep"
    printf -- '%s \n' "$dt"
  done
}

cat $PANEL_FIFO | parse | bar \
  -f "$FONT" \
  -g ${PANEL_WIDTH}x$PANEL_HEIGHT+$PANEL_X+$PANEL_Y \
  -F $COLOR_FG \
  -B $COLOR_BG \
  -u $PANEL_UL

wait
