#!/bin/sh

. $(dirname $0)/style.sh

HEIGHT=22
UNDERLINE=2

c() {
    herbstclient "$@"
}

wm() {
  c --idle | while read -r hook arg title; do
    [ "$hook" = focus_changed ] && printf -- 'title %s\n' "$title"
  done
}

time() {
  while :; do
    printf -- "time %s %%{F$WHITE}%s%%{F-}\n" $(date +'%Y-%m-%d %H:%M')

    sleep $((60 - $(date +%S)))
  done
}

bat_color() {
  local state=$1
  local perc=$2
  local c=$GREEN

  [ "$perc" -lt 75 ] && c=$YELLOW
  [ "$perc" -lt 50 ] && c=$ORANGE
  [ "$perc" -lt 25 ] && c=$RED
  [ "$state" -eq 1 ] && c=$BLUE

  printf '%s' $c
}

bat() {
  local sys=/sys/class/power_supply
  local ac=$sys/AC
  local bat state now full perc

  [ -d $ac ] || return 0

  while sleep 5; do
    state=$(< $ac/online)

    printf -- 'bat'

    for bat in $sys/BAT*; do
      case $bat in
        *\*)
          return 0
          ;;
      esac

      now=$(< $bat/energy_now)
      full=$(< $bat/energy_full)
      perc=$(expr \( 100 \* $now \) / $full)

      printf -- ' %%{F%s}%s%%{F-}' $(bat_color $state $perc) $perc
    done

    printf -- '\n'
  done
}

wlan_color() {
  local perc=$1
  local c=$GREEN

  # Max quality is 70
  [ "$perc" -lt 52 ] && c=$YELLOW
  [ "$perc" -lt 37 ] && c=$ORANGE
  [ "$perc" -lt 18 ] && c=$RED

  printf '%s' $c
}

wlan() {
  command -v iw >/dev/null || return 0

  local if=$1
  local ssid quality

  while sleep 5; do
    ssid=$(iw $if link | awk '/SSID: / { print $2 }')
    [ "$ssid" ] || continue
    quality=$(awk /$if:' / { gsub(/\./, "", $3); print $3 }' /proc/net/wireless)

    printf -- 'wlan %%{F%s}%s%%{F-}' $(wlan_color $perc) $ssid
  done
}

clients() {
  local n=$(c attr tags.focus.curframe_wcount)
  local c=$(c attr tags.focus.curframe_windex)

  for i in $(seq $n); do
    if [ $(($i - 1)) -eq $c ]; then
      printf -- '%%{+u}%%{U%s} %s %%{U-}%%{-u}' $ORANGE $i
    else
      printf -- ' %s ' $i
    fi
  done
}

parse() {
  local event msg
  local update prev
  local clients time bat wlan title

  while read -r event msg; do
    update=

    case $event in
      title)
        title="$msg"
        clients=$(clients)
        update=yes
        ;;
      time|bat|wlan)
        eval prev=\$$event
        if [ "$prev" != "$msg" ]; then
          eval $event="\$msg"
        fi
        update=yes
        ;;
    esac

    if [ "$update" ]; then
      printf -- ' %s %%{c} %s %%{r} %s %s %s \n' \
        "$clients" "$title" "$wlan" "$bat" "$time"
    fi
  done
}

cleanup() {
  c pad 0 0
  kill $CHLD 2>/dev/null
  rm -f $FIFO
}

trap 'cleanup' INT TERM EXIT

FIFO=$(mktemp -u)
mkfifo -m600 $FIFO

(wm) >$FIFO&
CHLD="$CHLD $!"

(time) >$FIFO&
CHLD="$CHLD $!"

(bat) >$FIFO&
CHLD="$CHLD $!"

(wlan) >$FIFO&
CHLD="$CHLD $!"

c pad 0 $HEIGHT

cat $FIFO | parse | lemonbar \
  -g x$HEIGHT++ \
  -u $UNDERLINE \
  -f $FONT_BITMAP \
  -F $LIGHT \
  -B $BLACK \
